Read Only by Desiree Desario
desireedesario.com | @desireedesario
A description of loop ranker
Desario_Desiree_LoopRanker_Sample: -	The project was made with JavaScript arrays, loops, functions, and conditionals.Pokemon Loop-	I have made an array of 16 top names of Pokémon cartoon characters children from San Dimas High School enjoyed. -	A loop is created to dynamically place them in a div. In the .css stylesheet, the each name is styled to look like buttons/bars in order to separate the repeating items.Calculator (advance/JavaScript)-	A simple calculator was created with two number fields inside of a container div for viewer input-	Four buttons were added for “add”, “subtract”, “multiply” and “divide”-	A div for results is added with style throughout the container div in the .css stylesheet. -	A function is used to capture the button click for each mathematic task (pass “add”, “subtract”, “multiply” and “divide” are all stored within the function as an argument/parameter). -	Inside the function, I have used a conditional to person the correct calculation of each button. -	A variable for results is created in order to “return” the value and place the result of the task in a div. Pokemon Ranker-	I have created a ranker out of the Pokémon cartoon characters that the children listed, and have put them in a ranker so that the viewer can do the same thing as the children of the high school have done. -	I made an array of ten of the pokemon characters (items) to rank.-	I have created a loop to create a stylized “ranker”-	jQuery UI Sortable makes it possible to move each item <div> up and down.-	A button is then added to submit and grab the user’s preferred order/ranking of each item. -	When button is clicked, the new item order will be saved into a “results” array, which will append the new array into the “results” div.